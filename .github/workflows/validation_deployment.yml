name: Deploy to Salesforce with PMD Scan

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Step 2: Setup Node 20
      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # Step 3: Install Salesforce CLI
      - name: Install Salesforce CLI
        run: npm install --global @salesforce/cli

      # Step 4: Install PMD
      - name: Install PMD
        run: |
          wget https://github.com/pmd/pmd/releases/download/pmd_releases%2F7.0.0/pmd-dist-7.0.0-bin.zip
          unzip pmd-dist-7.0.0-bin.zip
          mv pmd-bin-7.0.0 pmd
          echo "$PWD/pmd/bin" >> $GITHUB_PATH

      # Step 5: Run PMD Scan
      - name: Run PMD on Apex classes
        run: |
          ./pmd/bin/pmd check \
            -d force-app/main/default/classes \
            -R pmd-ruleset.xml \
            -f text \
            || true

      # Step 6: Authenticate using JWT
      - name: Authenticate to Salesforce (JWT)
        run: |
          echo "${{ secrets.SF_SERVER_KEY }}" > server.key
          sf org login jwt \
            --client-id ${{ secrets.SF_CONSUMER_KEY }} \
            --jwt-key-file server.key \
            --username ${{ secrets.SF_USERNAME }} \
            --instance-url ${{ secrets.SF_LOGIN_URL }} \
            --set-default

      # Step 7: Install sfdx-git-delta
      - name: Install sfdx-git-delta
        run: echo y | sf plugins install sfdx-git-delta

      # Step 8: Generate Delta from branch changes
      - name: Generate Delta
        run: |
          mkdir -p delta
          sf sgd:source:delta \
            --from "origin/main" \
            --to "HEAD" \
            --output delta \
            --ignore .github/workflows/ignore.txt
          ls -R delta

      # Step 9: Validate Changes in Salesforce
      - name: Validate Changes in Salesforce
        run: |
          if [ -z "$(ls -A delta)" ]; then
            echo "âœ… No changes to validate."
          else
            sf project deploy validate -d delta --test-level RunLocalTests
          fi
